buildscript {
    ext.kotlin_version = '1.2.10'
    ext.spring_version = '4.3.13.RELEASE'
    ext.struts_version = '2.5.14'
    ext.tomcat_version = '8.5.16'

    repositories {
        mavenCentral()
//        maven {
//            url "http://central.maven.org/maven2"
//        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'com.topwisesz.topwiseos'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'war'

sourceCompatibility = 1.8

configurations {
    mybatisGenerator
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile "org.springframework:spring-context:$spring_version"
    compile "org.springframework:spring-webmvc:$spring_version"
    compile "org.springframework:spring-web:$spring_version"
    compile "org.springframework:spring-jdbc:$spring_version"
    // compile "org.springframework:spring-aop:$spring_version"
    // compile "org.springframework:spring-orm:$spring_version"
    // compile "org.springframework:spring-jdbc:$spring_version"
    // compile "org.springframework:spring-instrument-tomcat:$spring_version"
    // compile "org.springframework:spring-instrument:$spring_version"
    // compile "org.springframework:spring-framework-bom:$spring_version"
    // compile "org.springframework:spring-expression:$spring_version"
    // compile "org.springframework:spring-core:$spring_version"
    // compile "org.springframework:spring-context-support:$spring_version"
    // compile "org.springframework:spring-context:$spring_version"
    // compile "org.springframework:spring-beans:$spring_version"
    // compile "org.springframework:spring-aspects:$spring_version"
    // compile "org.springframework:spring-test:$spring_version"
    // compile "org.springframework:spring-tx:$spring_version"
    // compile "org.springframework:spring-web:$spring_version"
    // compile "org.springframework:spring-webmvc:$spring_version"
    // compile "org.springframework:spring-webmvc-portlet:$spring_version"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // https://mvnrepository.com/artifact/org.apache.struts/struts2-core
    compile group: 'org.apache.struts', name: 'struts2-core', version: "$struts_version"
    // https://mvnrepository.com/artifact/org.apache.struts/struts2-spring-plugin
    compile group: 'org.apache.struts', name: 'struts2-spring-plugin', version: "$struts_version"
    // https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-servlet-api
    compile group: 'org.apache.tomcat', name: 'tomcat-servlet-api', version: "$tomcat_version"

    // https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
    // compile group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '6.2.2.jre8'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'


    // https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
    //compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1.1'
    compile 'com.alibaba:fastjson:1.2.44'

    // https://mvnrepository.com/artifact/org.mybatis/mybatis-spring
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.1'
    // https://mvnrepository.com/artifact/org.mybatis/mybatis
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.5'
    // https://mvnrepository.com/artifact/org.mybatis.generator/mybatis-generator-core
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.6'


    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    //MyBatis Generator 逆向生成代码
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.6'
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties;
}
task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driver")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
    ant.properties['tableName'] = properties.getProperty("package.tableName")
    ant.properties['entityName'] = properties.getProperty("package.entityName")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
            propertyref(name: 'tableName')
            propertyref(name: 'entityName')
        }
    }
}